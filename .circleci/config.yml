defaults: &defaults
  working_directory: /tmp/workspace
  docker:
    - image: circleci/golang:1.12.9

version: 2
jobs:
  BUILD:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - run: docker info
      - run: go version
      - run:
          name: "Build container"
          command: |
            docker build -t tinyhttp:latest .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar tinyhttp:latest
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar

  TEST:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
         name: "Test container"
         command: |
          docker run -d --rm --name "test" -p 8000:8000 tinyhttp:latest && \
          docker ps -a
          curl http://$(echo $DOCKER_HOST | cut -d'/' -f3 | cut -d':' -f1):8000
          docker logs test
          docker stop test

    E2ETESTS:
      <<: *defaults
      steps:
        - attach_workspace:
            at: /tmp/workspace
        - setup_remote_docker
        - run:
           name: Load archived Docker image
           command: docker load -i /tmp/workspace/image.tar
        - run:
           name: "Test container"
           command: |
            docker run -d --rm --name "test" -p 8000:8000 tinyhttp:latest && \
            docker ps -a
            curl --request POST \
            --url http://$(echo $DOCKER_HOST | cut -d'/' -f3 | cut -d':' -f1):8000/graphql \
            --header 'authorization: Bearer ' \
            --header 'content-type: application/json' \
            --cookie REVEL_FLASH= \
            --data '{"query":"mutation logIn($credentials: LogInput) {\n  logIn(credentials: $credentials) {\n    userId\n    token\n  }\n}\n","variables":{"credentials":{"email":"theuser","password":"thepassword"}}}'
            docker logs test
            docker stop test
      
    QA:
      <<: *defaults
      steps:
        - attach_workspace:
            at: /tmp/workspace
        - run: echo "Auto create Jira ticket"



  PUBLISH:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
         name: Load archived Docker image
         command: docker load -i /tmp/workspace/image.tar
      - run:
         name: "Publish Image"
         command: |
          docker tag tinyhttp:latest nickuk2/tinyhttp:latest
          docker push nickuk2/tinyhttp:latest

  DEV-DEPLOY:
    <<: *defaults
    steps:
      - run: echo do something with dev

  STG-DEPLOY:
    <<: *defaults
    steps:
      - run: echo do something with staging

  PROD-DEPLOY:
    <<: *defaults
    steps:
      - run: echo do something with production

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - BUILD
        # filters:
        #   branches:
        #     only: dev
      - TEST:
          requires: 
           - BUILD
      - PUBLISH:
          requires: 
           - TEST
      - DEV-DEPLOY:
          type: approval
          requires: 
           - PUBLISH
      - E2ETESTS:
          requires:
           - DEV-DEPLOY
      - QA:
          type: approval
          requires: 
           - E2ETESTS
      - STG-DEPLOY:
          type: approval
          requires: 
           - QA
          # filters:
          #   branches:
          #    only: master
      - PROD-DEPLOY:
          type: approval
          requires: 
           - QA
          #  filters:
          #   branches:
          #    only: master
